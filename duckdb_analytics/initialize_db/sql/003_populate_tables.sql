-- sqlfluff:rules:references.keywords:ignore_words:HEADER,JSON

/*
CREATE SECRET TO ALLOW IMPORTING FROM S3 BUCKET
*/

-- noqa: disable=all

CREATE OR REPLACE SECRET AWS_SECRET (
    TYPE S3
	,KEY_ID 'KEY_ID__VALUE'
	,SECRET 'SECRET__VALUE'
	,REGION 'REGION__VALUE'
);

-- noqa: enable=all

/*
ORDERS
*/

-- LOAD CSV

CREATE OR REPLACE TEMPORARY TABLE TMP_ORDERS AS
SELECT COLUMNS(*)
FROM
	READ_CSV(
		'/workspaces/analytics/duckdb_analytics/initialize_db/sample_data/orders.csv'
		,ALL_VARCHAR = TRUE
		,HEADER = TRUE
		,SEP = ','
	);

-- UNLOAD THE DATA AS JSON

COPY TMP_ORDERS
TO '~/TMP_DUCK_DB_EXPORT_ORDERS.json' (FORMAT JSON);

-- RE-LOAD THE JSON
--> MOSTLY JSON IN RAW_DATA SCHEMA

INSERT INTO RAW_DATA.ORDERS (LOAD_RESULT)
SELECT JSON AS LOAD_RESULT
FROM
	READ_JSON(
		'~/TMP_DUCK_DB_EXPORT_ORDERS.json'
		,RECORDS = FALSE
	)
WHERE
	(SELECT COUNT(*) = 0 AS _CHECK FROM RAW_DATA.ORDERS);

DROP TABLE IF EXISTS TMP_ORDERS;

/*
ORDERS WITH PLACEMENT
*/

-- LOAD CSV

CREATE OR REPLACE TEMPORARY TABLE TMP_ORDERS_WITH_PLACEMENT AS
SELECT COLUMNS(*)
FROM
	READ_CSV(
		'/workspaces/analytics/duckdb_analytics/initialize_db/sample_data/orders_with_placement.csv'
		,ALL_VARCHAR = TRUE
		,HEADER = TRUE
		,SEP = ','
	);

-- UNLOAD THE DATA AS JSON

COPY TMP_ORDERS_WITH_PLACEMENT
TO '~/TMP_DUCK_DB_EXPORT_ORDERS_WITH_PLACEMENT.json' (FORMAT JSON);

-- RE-LOAD THE JSON
--> MOSTLY JSON IN RAW_DATA SCHEMA

INSERT INTO RAW_DATA.ORDERS_WITH_PLACEMENT (LOAD_RESULT)
SELECT JSON AS LOAD_RESULT
FROM
	READ_JSON(
		'~/TMP_DUCK_DB_EXPORT_ORDERS_WITH_PLACEMENT.json'
		,RECORDS = FALSE
	)
WHERE
	(SELECT COUNT(*) = 0 AS _CHECK FROM RAW_DATA.ORDERS_WITH_PLACEMENT);

DROP TABLE IF EXISTS TMP_ORDERS_WITH_PLACEMENT;

/*
PROVISION RULES
*/

INSERT INTO RAW_DATA.PROVISION_RULES (LOAD_RESULT)
SELECT JSON AS LOAD_RESULT
FROM
	READ_JSON(
		'/workspaces/analytics/duckdb_analytics/initialize_db/sample_data/provision_rules.json'
		,RECORDS = FALSE
	)
WHERE
	(SELECT COUNT(*) = 0 AS _CHECK FROM RAW_DATA.PROVISION_RULES);

/*
NET PROMOTOR SCORE (NPS)
*/

INSERT INTO RAW_DATA.NET_PROMOTOR_SCORES (TRANSACTION_ID,RATING_DATE,RATING,TOOL)
SELECT
	TRANSACTION_ID
	,RATING_DATE
	,RATING
	,TOOL
FROM
	'/workspaces/analytics/duckdb_analytics/initialize_db/sample_data/nps.csv' --noqa
WHERE
	(SELECT COUNT(*) = 0 AS _CHECK FROM RAW_DATA.NET_PROMOTOR_SCORES);

/*
EXCHANGE RATES
*/

INSERT INTO RAW_DATA.EXCHANGE_RATES (LOAD_RESULT)
SELECT JSON AS LOAD_RESULT
FROM
	READ_JSON(
		'/workspaces/analytics/duckdb_analytics/initialize_db/sample_data/exchange_rates.json'
		,RECORDS = FALSE
	)
WHERE
	(SELECT COUNT(*) = 0 AS _CHECK FROM RAW_DATA.EXCHANGE_RATES);
