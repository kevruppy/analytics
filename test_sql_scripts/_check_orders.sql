-- noqa: disable=all
CREATE OR REPLACE TEMP TABLE TMP_TEST_ORDERS AS
WITH CTE AS
(
SELECT
	(LOAD_RESULT->>'ORDER_ID')::INTEGER AS ORDER_ID
	,(LOAD_RESULT->>'IS_TEST_ORDER')::BOOLEAN AS IS_TEST_ORDER
FROM
	RAW_DATA.ORDERS
)
SELECT
	ORDER_ID
FROM
	CTE
GROUP BY ALL 
HAVING
	CASE WHEN LIST_CONTAINS(ARRAY_AGG(DISTINCT IS_TEST_ORDER),TRUE) THEN TRUE ELSE FALSE END = TRUE;

CREATE OR REPLACE TEMP TABLE _ORDERS AS
WITH CTE_ORDERS AS
(
SELECT
	JSON_EXTRACT_STRING(LOAD_RESULT,['ORDER_ID','STATUS_NAME','PRODUCT_NAME','CREATION_DATE','STATUS_CHANGE_DATE','IS_TEST_ORDER']) AS _EXTRACT
FROM
	RAW_DATA.ORDERS
),
CTE_ORDERS_PLACEMENT AS
(
SELECT
	(LOAD_RESULT ->> 'ORDER_ID')::INTEGER AS ORDER_ID
FROM
	RAW_DATA.ORDERS_WITH_PLACEMENT
)
SELECT
	_EXTRACT[1]::INTEGER AS ORDER_ID
	,_EXTRACT[2]::VARCHAR AS STATUS_NAME
	,_EXTRACT[3]::VARCHAR AS PRODUCT_NAME
	,_EXTRACT[4]::DATE AS CREATION_DATE
	,_EXTRACT[5]::DATE AS STATUS_CHANGE_DATE
	,CASE WHEN _EXTRACT[1]::INTEGER IN (SELECT * FROM CTE_ORDERS_PLACEMENT) THEN TRUE ELSE FALSE END AS IS_PLACEMENT
FROM
	CTE_ORDERS
WHERE
	_EXTRACT[1]::INTEGER NOT IN (SELECT * FROM TMP_TEST_ORDERS);

SELECT
		LOAD_RESULT ->> 'productName' AS _PRODUCT_NAME
		,LOAD_RESULT ->> 'start' AS _START_DATE
		,LOAD_RESULT ->> 'end' AS _END_DATE
		,LOAD_RESULT ->> 'provision' ->> 'baseProvision' AS _BASE_PROVISION
		,LOAD_RESULT ->> 'provision' ->> 'placementProvision' AS _PLACEMENT_PROVISION
		,LOAD_RESULT -> 'provision' -> 'proportionalProvision' AS _PROPORTIONAL_PROVISION
FROM RAW_DATA.PROVISION_RULES


SELECT DISTINCT ORDER_ID,PRODUCT_NAME,CREATION_DATE,IS_PLACEMENT
FROM _ORDERS 